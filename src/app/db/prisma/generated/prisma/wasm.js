
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  image: 'image',
  role: 'role',
  isBlocked: 'isBlocked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  poster: 'poster',
  content: 'content',
  excerpt: 'excerpt',
  published: 'published',
  authorId: 'authorId',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogGalleryScalarFieldEnum = {
  id: 'id',
  url: 'url',
  blogId: 'blogId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogCategoryScalarFieldEnum = {
  blogId: 'blogId',
  categoryId: 'categoryId'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogTagScalarFieldEnum = {
  blogId: 'blogId',
  tagId: 'tagId'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  blogId: 'blogId',
  commenterId: 'commenterId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  userId: 'userId',
  blogId: 'blogId'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  poster: 'poster',
  excerpt: 'excerpt',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectGalleryScalarFieldEnum = {
  id: 'id',
  url: 'url',
  projectId: 'projectId'
};

exports.Prisma.ProjectLinkScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  projectId: 'projectId'
};

exports.Prisma.CaseStudyScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  poster: 'poster',
  excerpt: 'excerpt',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CaseStudyGalleryScalarFieldEnum = {
  id: 'id',
  url: 'url',
  caseStudyId: 'caseStudyId'
};

exports.Prisma.CaseStudyLinkScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  caseStudyId: 'caseStudyId'
};

exports.Prisma.TechnologyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectTechnologyScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  technologyId: 'technologyId'
};

exports.Prisma.CaseStudyTechnologyScalarFieldEnum = {
  id: 'id',
  caseStudyId: 'caseStudyId',
  technologyId: 'technologyId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.Prisma.ModelName = {
  User: 'User',
  Blog: 'Blog',
  BlogGallery: 'BlogGallery',
  Category: 'Category',
  BlogCategory: 'BlogCategory',
  Tag: 'Tag',
  BlogTag: 'BlogTag',
  Comment: 'Comment',
  Favorite: 'Favorite',
  Project: 'Project',
  ProjectGallery: 'ProjectGallery',
  ProjectLink: 'ProjectLink',
  CaseStudy: 'CaseStudy',
  CaseStudyGallery: 'CaseStudyGallery',
  CaseStudyLink: 'CaseStudyLink',
  Technology: 'Technology',
  ProjectTechnology: 'ProjectTechnology',
  CaseStudyTechnology: 'CaseStudyTechnology'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\Coding\\Level 2\\Milestone 7\\assignment_7\\backend\\src\\app\\db\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\Coding\\Level 2\\Milestone 7\\assignment_7\\backend\\src\\app\\db\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\n// *==================== User ====================*\n// %User model with fields for authentication, profile, role, and relations to blogs, favorites, and comments\nmodel User {\n  id        Int        @id @default(autoincrement())\n  email     String     @unique\n  name      String?\n  password  String?\n  image     String?\n  role      UserRole   @default(USER)\n  isBlocked Boolean    @default(false)\n  blogs     Blog[]\n  favorites Favorite[]\n  comments  Comment[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n}\n\n// *==================== Blog ====================*\n// %Main blog model with relations to categories, tags, author, comments, favorites, and galleries\nmodel Blog {\n  id         Int            @id @default(autoincrement())\n  title      String\n  slug       String         @unique\n  poster     String?\n  content    String\n  excerpt    String?\n  published  Boolean        @default(false)\n  authorId   Int\n  author     User           @relation(fields: [authorId], references: [id])\n  categories BlogCategory[]\n  tags       BlogTag[]\n  favorites  Favorite[]\n  comments   Comment[]\n  galleries  BlogGallery[]\n  views      Int            @default(0)\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @updatedAt\n}\n\nmodel BlogGallery {\n  id     Int    @id @default(autoincrement())\n  url    String\n  blogId Int\n  blog   Blog   @relation(fields: [blogId], references: [id])\n}\n\nmodel Category {\n  id        Int            @id @default(autoincrement())\n  name      String         @unique\n  blogs     BlogCategory[]\n  createdAt DateTime       @default(now())\n  updatedAt DateTime       @updatedAt\n}\n\nmodel BlogCategory {\n  blogId     Int\n  categoryId Int\n  blog       Blog     @relation(fields: [blogId], references: [id])\n  category   Category @relation(fields: [categoryId], references: [id])\n\n  @@id([blogId, categoryId])\n}\n\nmodel Tag {\n  id        Int       @id @default(autoincrement())\n  name      String    @unique\n  blogs     BlogTag[]\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n}\n\nmodel BlogTag {\n  blogId Int\n  tagId  Int\n  blog   Blog @relation(fields: [blogId], references: [id])\n  tag    Tag  @relation(fields: [tagId], references: [id])\n\n  @@id([blogId, tagId])\n}\n\n// *==================== Comment ====================*\n// %Comments on blogs with relations to the blog and commenter\nmodel Comment {\n  id          Int      @id @default(autoincrement())\n  content     String\n  blogId      Int\n  commenterId Int\n  blog        Blog     @relation(fields: [blogId], references: [id])\n  commenter   User     @relation(fields: [commenterId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\n// *==================== Favorite ====================*\n// %Join table for users favoring blogs with composite primary key relations to user and blog\nmodel Favorite {\n  userId Int\n  blogId Int\n  user   User @relation(fields: [userId], references: [id])\n  blog   Blog @relation(fields: [blogId], references: [id])\n\n  @@id([userId, blogId])\n}\n\n// *==================== Project ====================*\n\nmodel Project {\n  id           Int                 @id @default(autoincrement())\n  title        String\n  description  String\n  links        ProjectLink[]\n  poster       String?\n  excerpt      String?\n  technologies ProjectTechnology[]\n  galleries    ProjectGallery[]\n  views        Int                 @default(0)\n  createdAt    DateTime            @default(now())\n  updatedAt    DateTime            @updatedAt\n}\n\nmodel ProjectGallery {\n  id        Int     @id @default(autoincrement())\n  url       String\n  projectId Int\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\nmodel ProjectLink {\n  id        Int     @id @default(autoincrement())\n  name      String\n  url       String\n  projectId Int\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\n// *==================== Case-Study ====================*\n\nmodel CaseStudy {\n  id           Int                   @id @default(autoincrement())\n  title        String\n  content      String\n  links        CaseStudyLink[]\n  poster       String?\n  excerpt      String?\n  technologies CaseStudyTechnology[]\n  galleries    CaseStudyGallery[]\n  views        Int                   @default(0)\n  createdAt    DateTime              @default(now())\n  updatedAt    DateTime              @updatedAt\n}\n\nmodel CaseStudyGallery {\n  id          Int       @id @default(autoincrement())\n  url         String\n  caseStudyId Int\n  caseStudy   CaseStudy @relation(fields: [caseStudyId], references: [id])\n}\n\nmodel CaseStudyLink {\n  id          Int       @id @default(autoincrement())\n  name        String\n  url         String\n  caseStudyId Int\n  caseStudy   CaseStudy @relation(fields: [caseStudyId], references: [id])\n}\n\n// *==================== Technology ====================*\n// %Technology model with relations to projects and case studies through join tables \nmodel Technology {\n  id          Int                   @id @default(autoincrement())\n  name        String                @unique\n  projects    ProjectTechnology[]\n  caseStudies CaseStudyTechnology[]\n  createdAt   DateTime              @default(now())\n  updatedAt   DateTime              @updatedAt\n}\n\nmodel ProjectTechnology {\n  id           Int        @id @default(autoincrement())\n  projectId    Int\n  technologyId Int\n  project      Project    @relation(fields: [projectId], references: [id])\n  technology   Technology @relation(fields: [technologyId], references: [id])\n\n  @@unique([projectId, technologyId])\n}\n\nmodel CaseStudyTechnology {\n  id           Int        @id @default(autoincrement())\n  caseStudyId  Int\n  technologyId Int\n  caseStudy    CaseStudy  @relation(fields: [caseStudyId], references: [id])\n  technology   Technology @relation(fields: [technologyId], references: [id])\n\n  @@unique([caseStudyId, technologyId])\n}\n\nenum UserRole {\n  USER\n  ADMIN\n  MODERATOR\n}\n",
  "inlineSchemaHash": "7292b65f5ed89dc214515e176eb51ec686037eef23ea084a5a0ad1a816537a8c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"isBlocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"blogs\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToUser\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Blog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogToUser\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"BlogCategory\",\"relationName\":\"BlogToBlogCategory\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"BlogTag\",\"relationName\":\"BlogToBlogTag\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"BlogToFavorite\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"BlogToComment\"},{\"name\":\"galleries\",\"kind\":\"object\",\"type\":\"BlogGallery\",\"relationName\":\"BlogToBlogGallery\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BlogGallery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blog\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToBlogGallery\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogs\",\"kind\":\"object\",\"type\":\"BlogCategory\",\"relationName\":\"BlogCategoryToCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BlogCategory\":{\"fields\":[{\"name\":\"blogId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blog\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToBlogCategory\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"BlogCategoryToCategory\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogs\",\"kind\":\"object\",\"type\":\"BlogTag\",\"relationName\":\"BlogTagToTag\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BlogTag\":{\"fields\":[{\"name\":\"blogId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blog\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToBlogTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"BlogTagToTag\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"commenterId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blog\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToComment\"},{\"name\":\"commenter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Favorite\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blogId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"blog\",\"kind\":\"object\",\"type\":\"Blog\",\"relationName\":\"BlogToFavorite\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"links\",\"kind\":\"object\",\"type\":\"ProjectLink\",\"relationName\":\"ProjectToProjectLink\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"technologies\",\"kind\":\"object\",\"type\":\"ProjectTechnology\",\"relationName\":\"ProjectToProjectTechnology\"},{\"name\":\"galleries\",\"kind\":\"object\",\"type\":\"ProjectGallery\",\"relationName\":\"ProjectToProjectGallery\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProjectGallery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectGallery\"}],\"dbName\":null},\"ProjectLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectLink\"}],\"dbName\":null},\"CaseStudy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"links\",\"kind\":\"object\",\"type\":\"CaseStudyLink\",\"relationName\":\"CaseStudyToCaseStudyLink\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"technologies\",\"kind\":\"object\",\"type\":\"CaseStudyTechnology\",\"relationName\":\"CaseStudyToCaseStudyTechnology\"},{\"name\":\"galleries\",\"kind\":\"object\",\"type\":\"CaseStudyGallery\",\"relationName\":\"CaseStudyToCaseStudyGallery\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CaseStudyGallery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caseStudyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"caseStudy\",\"kind\":\"object\",\"type\":\"CaseStudy\",\"relationName\":\"CaseStudyToCaseStudyGallery\"}],\"dbName\":null},\"CaseStudyLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caseStudyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"caseStudy\",\"kind\":\"object\",\"type\":\"CaseStudy\",\"relationName\":\"CaseStudyToCaseStudyLink\"}],\"dbName\":null},\"Technology\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"ProjectTechnology\",\"relationName\":\"ProjectTechnologyToTechnology\"},{\"name\":\"caseStudies\",\"kind\":\"object\",\"type\":\"CaseStudyTechnology\",\"relationName\":\"CaseStudyTechnologyToTechnology\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProjectTechnology\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technologyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectTechnology\"},{\"name\":\"technology\",\"kind\":\"object\",\"type\":\"Technology\",\"relationName\":\"ProjectTechnologyToTechnology\"}],\"dbName\":null},\"CaseStudyTechnology\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"caseStudyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"technologyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"caseStudy\",\"kind\":\"object\",\"type\":\"CaseStudy\",\"relationName\":\"CaseStudyToCaseStudyTechnology\"},{\"name\":\"technology\",\"kind\":\"object\",\"type\":\"Technology\",\"relationName\":\"CaseStudyTechnologyToTechnology\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

