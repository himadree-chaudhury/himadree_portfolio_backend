// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String?
  image     String?
  role      String   @default("USER")
  blogs     Blog[]   
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id          Int        @id @default(autoincrement())
  title       String
  slug        String     @unique
  poster      String?
  gallery     String[]
  content     String
  excerpt     String?
  published   Boolean    @default(false)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  categories  Category[] @relation("BlogCategories")
  tags        Tag[]      @relation("BlogTags")
  comments    Comment[]
  views       Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  blogs     Blog[]   @relation("BlogCategories")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  blogs     Blog[]   @relation("BlogTags")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    Int
  commenter    User     @relation(fields: [commenterId], references: [id])
  commenterId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}